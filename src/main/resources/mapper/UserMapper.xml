<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.wuxianjie.springrestapi.user.UserMapper">
  <select id="selectHashedPasswordById" resultType="java.lang.String">
    select hashed_password
    from user
    where id = #{userId}
  </select>

  <select id="selectById" resultType="net.wuxianjie.springrestapi.user.User">
    select id,
           remark,
           username,
           nickname,
           hashed_password as hashedPassword,
           is_enabled      as enabled,
           role_id         as roleId
    from user
    where id = #{userId}
  </select>

  <select id="selectByUsername" resultType="net.wuxianjie.springrestapi.shared.security.core.AuthData">
    select u.username,
           u.hashed_password as hashedPassword,
           r.menus,
           u.is_enabled      as enabled,
           u.id              as userId,
           u.nickname,
           r.id              as roleId
    from user u
           join role r on r.id = u.role_id
    where u.username = #{username}
  </select>

  <select id="selectExistsByUsername" resultType="java.lang.Boolean">
    select exists(select 1 from user where username = #{username})
  </select>

  <select id="selectExistsByRoleId" resultType="java.lang.Boolean">
    select exists(select 1 from user where role_id = #{roleId})
  </select>

  <select id="selectCountByUsernameLikeNicknameLikeEnabled" resultType="java.lang.Long">
    select count(1)
    from user u
    join role r on r.id = u.role_id
    where
    r.full_path like concat(#{currentUserRoleFullPath}, '.%')
    <if test="q.username != null">and u.username like #{q.username}</if>
    <if test="q.nickname != null">and u.nickname like #{q.nickname}</if>
    <if test="q.enabled != null">and u.is_enabled = #{q.enabled}</if>
  </select>

  <select id="selectByUsernameLikeNicknameLikeEnabledOrderByUpdatedAtDesc" resultType="java.util.LinkedHashMap">
    select
    u.id as userId,
    u.updated_at as updatedAt,
    u.remark,
    u.username,
    u.nickname,
    u.is_enabled as enabled,
    u.role_id as roleId,
    r.name as role,
    r.menus
    from user u
    join role r on r.id = u.role_id
    where
    r.full_path like concat(#{currentUserRoleFullPath}, '.%')
    <if test="q.username != null">and u.username like #{q.username}</if>
    <if test="q.nickname != null">and u.nickname like #{q.nickname}</if>
    <if test="q.enabled != null">and u.is_enabled = #{q.enabled}</if>
    order by u.updated_at desc
    limit #{p.offset}, #{p.pageSize}
  </select>

  <insert id="insert">
    insert into user (created_at, updated_at, remark, username, nickname, hashed_password, is_enabled, role_id)
    values (now(), now(), #{remark}, #{username}, #{nickname}, #{hashedPassword}, #{enabled}, #{roleId})
  </insert>

  <update id="updateById">
    update user
    <set>
      updated_at = now(),
      <if test="remark != null">
        remark = #{remark},
      </if>
      <if test="nickname != null">
        nickname = #{nickname},
      </if>
      <if test="hashedPassword != null">
        hashed_password = #{hashedPassword},
      </if>
      <if test="enabled != null">
        is_enabled = #{enabled},
      </if>
      <if test="roleId != null">
        role_id = #{roleId},
      </if>
    </set>
    where id = #{id}
  </update>

  <delete id="deleteByIdRoleFullPathLike">
    delete u
    from user u
           join role r on r.id = u.role_id
    where u.id = #{userId}
      and r.full_path like concat(#{currentUserRoleFullPath}, '.%')
  </delete>
</mapper>
